======> Essential BC at x=0: prescribed temperature.
======> Essential BC at x=0: prescribed temperature.
Vec Object: 1 MPI processes
  type: seq
0.
0.000637669
0.00127531
0.00191291
0.00255042
0.00318784
0.00382513
0.00446227
0.00509924
0.005736
0.00637254
0.00700882
0.00764483
0.00828054
0.00891592
0.00955094
0.0101856
0.0108198
0.0114537
0.012087
0.0127199
0.0133523
0.0139842
0.0146155
0.0152462
0.0158764
0.0165059
0.0171347
0.0177629
0.0183904
0.0190171
0.0196431
0.0202683
0.0208928
0.0215164
0.0221391
0.022761
0.023382
0.024002
0.0246211
0.0252393
0.0258564
0.0264725
0.0270876
0.0277016
0.0283145
0.0289263
0.0295369
0.0301464
0.0307547
0.0313618
0.0319676
0.0325722
0.0331755
0.0337775
0.0343781
0.0349774
0.0355753
0.0361718
0.0367669
0.0373605
0.0379527
0.0385433
0.0391325
0.0397201
0.0403061
0.0408905
0.0414733
0.0420545
0.042634
0.0432118
0.043788
0.0443624
0.044935
0.0455059
0.046075
0.0466422
0.0472076
0.0477712
0.0483329
0.0488926
0.0494505
0.0500063
0.0505602
0.0511121
0.051662
0.0522099
0.0527557
0.0532994
0.053841
0.0543804
0.0549178
0.0554529
0.0559859
0.0565167
0.0570452
0.0575715
0.0580955
0.0586172
0.0591366
0.0596536
0.0601684
0.0606807
0.0611906
0.0616981
0.0622032
0.0627059
0.063206
0.0637037
0.0641988
0.0646914
0.0651815
0.065669
0.0661539
0.0666361
0.0671158
0.0675928
0.0680671
0.0685387
0.0690077
0.0694739
0.0699374
0.0703981
0.070856
0.0713111
0.0717635
0.0722129
0.0726596
0.0731033
0.0735442
0.0739822
0.0744172
0.0748494
0.0752785
0.0757047
0.0761279
0.0765481
0.0769653
0.0773794
0.0777905
0.0781985
0.0786034
0.0790052
0.0794039
0.0797995
0.0801919
0.0805812
0.0809672
0.0813501
0.0817298
0.0821062
0.0824794
0.0828493
0.083216
0.0835794
0.0839395
0.0842962
0.0846497
0.0849998
0.0853465
0.0856899
0.0860299
0.0863665
0.0866996
0.0870294
0.0873557
0.0876786
0.087998
0.0883139
0.0886264
0.0889354
0.0892408
0.0895427
0.0898411
0.0901359
0.0904272
0.0907149
0.0909991
0.0912796
0.0915565
0.0918299
0.0920996
0.0923656
0.092628
0.0928868
0.0931419
0.0933933
0.093641
0.093885
0.0941253
0.0943619
0.0945948
0.094824
0.0950494
0.095271
0.0954889
0.095703
0.0959134
0.0961199
0.0963227
0.0965216
0.0967168
0.0969081
0.0970956
0.0972793
0.0974591
0.0976351
0.0978072
0.0979755
0.0981399
0.0983004
0.098457
0.0986098
0.0987587
0.0989036
0.0990447
0.0991818
0.0993151
0.0994444
0.0995698
0.0996912
0.0998087
0.0999223
0.100032
0.100138
0.100239
0.100337
0.100431
0.100521
0.100607
0.100689
0.100767
0.10084
0.10091
0.100976
0.101038
0.101096
0.10115
0.101201
0.101247
0.101289
0.101327
0.101361
0.101391
0.101417
0.101439
0.101457
0.101471
0.101481
0.101487
0.101489
0.101487
0.101481
0.101471
0.101457
0.101439
0.101417
0.101391
0.101361
0.101327
0.101289
0.101247
0.101201
0.10115
0.101096
0.101038
0.100976
0.10091
0.10084
0.100767
0.100689
0.100607
0.100521
0.100431
0.100337
0.100239
0.100138
0.100032
0.0999223
0.0998087
0.0996912
0.0995698
0.0994444
0.0993151
0.0991818
0.0990447
0.0989036
0.0987587
0.0986098
0.098457
0.0983004
0.0981399
0.0979755
0.0978072
0.0976351
0.0974591
0.0972793
0.0970956
0.0969081
0.0967168
0.0965216
0.0963227
0.0961199
0.0959134
0.095703
0.0954889
0.095271
0.0950494
0.094824
0.0945948
0.094362
0.0941253
0.093885
0.093641
0.0933933
0.0931419
0.0928868
0.092628
0.0923656
0.0920996
0.0918299
0.0915565
0.0912796
0.0909991
0.0907149
0.0904272
0.090136
0.0898411
0.0895427
0.0892408
0.0889354
0.0886264
0.088314
0.087998
0.0876786
0.0873557
0.0870294
0.0866996
0.0863665
0.0860299
0.0856899
0.0853465
0.0849998
0.0846497
0.0842962
0.0839395
0.0835794
0.083216
0.0828493
0.0824794
0.0821062
0.0817298
0.0813501
0.0809672
0.0805812
0.0801919
0.0797995
0.0794039
0.0790052
0.0786034
0.0781985
0.0777905
0.0773794
0.0769653
0.0765481
0.0761279
0.0757047
0.0752785
0.0748494
0.0744172
0.0739822
0.0735442
0.0731033
0.0726596
0.0722129
0.0717635
0.0713111
0.070856
0.0703981
0.0699374
0.0694739
0.0690077
0.0685388
0.0680671
0.0675928
0.0671158
0.0666361
0.0661539
0.065669
0.0651815
0.0646914
0.0641988
0.0637037
0.063206
0.0627059
0.0622032
0.0616982
0.0611906
0.0606807
0.0601684
0.0596537
0.0591366
0.0586172
0.0580955
0.0575715
0.0570452
0.0565167
0.0559859
0.0554529
0.0549178
0.0543804
0.053841
0.0532994
0.0527557
0.0522099
0.051662
0.0511121
0.0505602
0.0500063
0.0494505
0.0488926
0.0483329
0.0477712
0.0472077
0.0466422
0.046075
0.0455059
0.044935
0.0443624
0.043788
0.0432119
0.042634
0.0420545
0.0414733
0.0408905
0.0403061
0.0397201
0.0391325
0.0385433
0.0379527
0.0373605
0.0367669
0.0361718
0.0355753
0.0349774
0.0343781
0.0337775
0.0331755
0.0325722
0.0319676
0.0313618
0.0307547
0.0301464
0.0295369
0.0289263
0.0283145
0.0277016
0.0270876
0.0264725
0.0258564
0.0252393
0.0246211
0.024002
0.023382
0.022761
0.0221391
0.0215164
0.0208928
0.0202683
0.0196431
0.0190171
0.0183904
0.0177629
0.0171347
0.0165059
0.0158764
0.0152462
0.0146155
0.0139842
0.0133523
0.0127199
0.012087
0.0114537
0.0108198
0.0101856
0.00955095
0.00891592
0.00828054
0.00764483
0.00700882
0.00637254
0.005736
0.00509924
0.00446227
0.00382513
0.00318784
0.00255042
0.00191291
0.00127531
0.000637669
0.
**************************************** ***********************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./ex1 on a  named ubuntu with 1 processor, by hjy Thu Jun  9 23:52:03 2022
Using Petsc Release Version 3.17.1, Apr 28, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           3.809e-01     1.000   3.809e-01
Objects:              4.800e+01     1.000   4.800e+01
Flops:                4.560e+08     1.000   4.560e+08  4.560e+08
Flops/sec:            1.197e+09     1.000   1.197e+09  1.197e+09
Memory (bytes):       5.760e+05     1.000   5.760e+05  5.760e+05
MPI Msg Count:        0.000e+00     0.000   0.000e+00  0.000e+00
MPI Msg Len (bytes):  0.000e+00     0.000   0.000e+00  0.000e+00
MPI Reductions:       0.000e+00     0.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 3.8086e-01 100.0%  4.5602e+08 100.0%  0.000e+00   0.0%  0.000e+00        0.0%  0.000e+00   0.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

VecView                1 1.0 1.1778e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecMDot            12649 1.0 3.9726e-02 1.0 1.92e+08 1.0 0.0e+00 0.0e+00 0.0e+00 10 42  0  0  0  10 42  0  0  0  4823
VecNorm            13144 1.0 1.4031e-02 1.0 1.32e+07 1.0 0.0e+00 0.0e+00 0.0e+00  4  3  0  0  0   4  3  0  0  0   938
VecScale           13144 1.0 4.8658e-03 1.0 6.59e+06 1.0 0.0e+00 0.0e+00 0.0e+00  1  1  0  0  0   1  1  0  0  0  1353
VecCopy              595 1.0 8.0986e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet               595 1.0 2.6003e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY              990 1.0 6.7491e-04 1.0 9.92e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  1470
VecMAXPY           13144 1.0 2.5769e-02 1.0 2.04e+08 1.0 0.0e+00 0.0e+00 0.0e+00  7 45  0  0  0   7 45  0  0  0  7935
VecAssemblyBegin     102 1.0 1.4422e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAssemblyEnd       102 1.0 1.3398e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecPointwiseMult   13144 1.0 5.8765e-03 1.0 6.59e+06 1.0 0.0e+00 0.0e+00 0.0e+00  2  1  0  0  0   2  1  0  0  0  1121
VecNormalize       13144 1.0 2.6099e-02 1.0 1.97e+07 1.0 0.0e+00 0.0e+00 0.0e+00  7  4  0  0  0   7  4  0  0  0   756
MatMult            13044 1.0 4.4991e-02 1.0 3.26e+07 1.0 0.0e+00 0.0e+00 0.0e+00 12  7  0  0  0  12  7  0  0  0   725
MatAssemblyBegin       3 1.0 6.7500e-07 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         3 1.0 4.4544e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 9.6078e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve             100 1.0 3.7524e-01 1.0 4.56e+08 1.0 0.0e+00 0.0e+00 0.0e+00 99100  0  0  0  99100  0  0  0  1215
KSPGMRESOrthog     12649 1.0 2.3195e-01 1.0 3.83e+08 1.0 0.0e+00 0.0e+00 0.0e+00 61 84  0  0  0  61 84  0  0  0  1653
PCSetUp                1 1.0 4.8610e-06 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
PCApply            13144 1.0 1.2395e-02 1.0 6.59e+06 1.0 0.0e+00 0.0e+00 0.0e+00  3  1  0  0  0   3  1  0  0  0   531
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector    38             38       214928     0.
              Matrix     1              1        31428     0.
       Krylov Solver     1              1        18872     0.
      Preconditioner     1              1          880     0.
    Distributed Mesh     1              1         5072     0.
   Star Forest Graph     2              2         2128     0.
     Discrete System     1              1          968     0.
           Weak Form     1              1          624     0.
              Viewer     2              1          848     0.
========================================================================================================================
Average time to get PetscTime(): 3.5e-08
#PETSc Option Table entries:
-log_view
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-mpich=/home/hjy/Soft/petsc-3.16.6-extlibs/mpich-3.4.2.tar.gz --download-fblaslapack --with-debugging=yes --prefix=/home/hjy/Soft/petsc-3.17.1-opt --download-hypre=/home/hjy/Soft/petsc-3.16.6-extlibs/hypre-2.23.0.tar.gz --download-mumps=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-metis-c8d2dc1e751e.tar.gz --download-hdf5=/home/hjy/Soft/petsc-3.16.6-extlibs/hdf5-1.12.1.tar.bz2 COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native" --download-scalapack --with-fc=gfortran --with-fortranlib-autodetect=1
-----------------------------------------
Libraries compiled on 2022-05-23 03:40:19 on ubuntu 
Machine characteristics: Linux-5.4.0-110-generic-x86_64-with-Ubuntu-18.04-bionic
Using PETSc directory: /home/hjy/Soft/petsc-3.17.1-opt
Using PETSc arch: 
-----------------------------------------

Using C compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native   
Using Fortran compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native    
-----------------------------------------

Using include paths: -I/home/hjy/Soft/petsc-3.17.1-opt/include
-----------------------------------------

Using C linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc
Using Fortran linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90
Using libraries: -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -lpetsc -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -Wl,-rpath,/home/hjy/lib/hdf5-1.13.1/lib -L/home/hjy/lib/hdf5-1.13.1/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7 -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1 -L/home/hjy/Soft/petsc-3.17.1 -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lpthread -lscalapack -lflapack -lfblas -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


======> Essential BC at x=0: prescribed temperature.
======> Essential BC at x=0: prescribed temperature.
Vec Object: 2 MPI processes
  type: mpi
Process [0]
0.
0.000637669
0.00127531
0.00191291
0.00255042
0.00318784
0.00382513
0.00446227
0.00509924
0.005736
0.00637254
0.00700882
0.00764483
0.00828054
0.00891592
0.00955094
0.0101856
0.0108198
0.0114537
0.012087
0.0127199
0.0133523
0.0139842
0.0146155
0.0152462
0.0158764
0.0165059
0.0171347
0.0177629
0.0183904
0.0190171
0.0196431
0.0202683
0.0208928
0.0215164
0.0221391
0.022761
0.023382
0.024002
0.0246211
0.0252393
0.0258564
0.0264725
0.0270876
0.0277016
0.0283145
0.0289263
0.0295369
0.0301464
0.0307547
0.0313618
0.0319676
0.0325722
0.0331755
0.0337775
0.0343781
0.0349774
0.0355753
0.0361718
0.0367669
0.0373605
0.0379527
0.0385433
0.0391325
0.0397201
0.0403061
0.0408905
0.0414733
0.0420545
0.042634
0.0432118
0.043788
0.0443624
0.044935
0.0455059
0.046075
0.0466422
0.0472076
0.0477712
0.0483329
0.0488926
0.0494505
0.0500063
0.0505602
0.0511121
0.051662
0.0522099
0.0527557
0.0532994
0.053841
0.0543804
0.0549178
0.0554529
0.0559859
0.0565167
0.0570452
0.0575715
0.0580955
0.0586172
0.0591366
0.0596536
0.0601684
0.0606807
0.0611906
0.0616981
0.0622032
0.0627059
0.063206
0.0637037
0.0641988
0.0646914
0.0651815
0.065669
0.0661539
0.0666361
0.0671158
0.0675928
0.0680671
0.0685387
0.0690077
0.0694739
0.0699374
0.0703981
0.070856
0.0713111
0.0717635
0.0722129
0.0726596
0.0731033
0.0735442
0.0739822
0.0744172
0.0748494
0.0752785
0.0757047
0.0761279
0.0765481
0.0769653
0.0773794
0.0777905
0.0781985
0.0786034
0.0790052
0.0794039
0.0797995
0.0801919
0.0805812
0.0809672
0.0813501
0.0817298
0.0821062
0.0824794
0.0828493
0.083216
0.0835794
0.0839395
0.0842962
0.0846497
0.0849998
0.0853465
0.0856899
0.0860299
0.0863665
0.0866996
0.0870294
0.0873557
0.0876786
0.087998
0.0883139
0.0886264
0.0889354
0.0892408
0.0895427
0.0898411
0.0901359
0.0904272
0.0907149
0.0909991
0.0912796
0.0915565
0.0918299
0.0920996
0.0923656
0.092628
0.0928868
0.0931419
0.0933933
0.093641
0.093885
0.0941253
0.0943619
0.0945948
0.094824
0.0950494
0.095271
0.0954889
0.095703
0.0959134
0.0961199
0.0963227
0.0965216
0.0967168
0.0969081
0.0970956
0.0972793
0.0974591
0.0976351
0.0978072
0.0979755
0.0981399
0.0983004
0.098457
0.0986098
0.0987587
0.0989036
0.0990447
0.0991818
0.0993151
0.0994444
0.0995698
0.0996912
0.0998087
0.0999223
0.100032
0.100138
0.100239
0.100337
0.100431
0.100521
0.100607
0.100689
0.100767
0.10084
0.10091
0.100976
0.101038
0.101096
0.10115
0.101201
0.101247
0.101289
0.101327
0.101361
0.101391
0.101417
0.101439
0.101457
0.101471
0.101481
0.101487
0.101489
Process [1]
0.101487
0.101481
0.101471
0.101457
0.101439
0.101417
0.101391
0.101361
0.101327
0.101289
0.101247
0.101201
0.10115
0.101096
0.101038
0.100976
0.10091
0.10084
0.100767
0.100689
0.100607
0.100521
0.100431
0.100337
0.100239
0.100138
0.100032
0.0999223
0.0998087
0.0996912
0.0995698
0.0994444
0.0993151
0.0991818
0.0990447
0.0989036
0.0987587
0.0986098
0.098457
0.0983004
0.0981399
0.0979755
0.0978072
0.0976351
0.0974591
0.0972793
0.0970956
0.0969081
0.0967168
0.0965216
0.0963227
0.0961199
0.0959134
0.095703
0.0954889
0.095271
0.0950494
0.094824
0.0945948
0.094362
0.0941253
0.093885
0.093641
0.0933933
0.0931419
0.0928868
0.092628
0.0923656
0.0920996
0.0918299
0.0915565
0.0912796
0.0909991
0.0907149
0.0904272
0.090136
0.0898411
0.0895427
0.0892408
0.0889354
0.0886264
0.088314
0.087998
0.0876786
0.0873557
0.0870294
0.0866996
0.0863665
0.0860299
0.0856899
0.0853465
0.0849998
0.0846497
0.0842962
0.0839395
0.0835794
0.083216
0.0828493
0.0824794
0.0821062
0.0817298
0.0813501
0.0809672
0.0805812
0.0801919
0.0797995
0.0794039
0.0790052
0.0786034
0.0781985
0.0777905
0.0773794
0.0769653
0.0765481
0.0761279
0.0757047
0.0752785
0.0748494
0.0744172
0.0739822
0.0735442
0.0731033
0.0726596
0.0722129
0.0717635
0.0713111
0.070856
0.0703981
0.0699374
0.0694739
0.0690077
0.0685388
0.0680671
0.0675928
0.0671158
0.0666361
0.0661539
0.065669
0.0651815
0.0646914
0.0641988
0.0637037
0.063206
0.0627059
0.0622032
0.0616982
0.0611906
0.0606807
0.0601684
0.0596537
0.0591366
0.0586172
0.0580955
0.0575715
0.0570452
0.0565167
0.0559859
0.0554529
0.0549178
0.0543804
0.053841
0.0532994
0.0527557
0.0522099
0.051662
0.0511121
0.0505602
0.0500063
0.0494505
0.0488926
0.0483329
0.0477712
0.0472077
0.0466422
0.046075
0.0455059
0.044935
0.0443624
0.043788
0.0432119
0.042634
0.0420545
0.0414733
0.0408905
0.0403061
0.0397201
0.0391325
0.0385433
0.0379527
0.0373605
0.0367669
0.0361718
0.0355753
0.0349774
0.0343781
0.0337775
0.0331755
0.0325722
0.0319676
0.0313618
0.0307547
0.0301464
0.0295369
0.0289263
0.0283145
0.0277016
0.0270876
0.0264725
0.0258564
0.0252393
0.0246211
0.024002
0.023382
0.022761
0.0221391
0.0215164
0.0208928
0.0202683
0.0196431
0.0190171
0.0183904
0.0177629
0.0171347
0.0165059
0.0158764
0.0152462
0.0146155
0.0139842
0.0133523
0.0127199
0.012087
0.0114537
0.0108198
0.0101856
0.00955095
0.00891592
0.00828054
0.00764483
0.00700882
0.00637254
0.005736
0.00509924
0.00446227
0.00382513
0.00318784
0.00255042
0.00191291
0.00127531
0.000637669
0.
**************************************** ***********************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./ex1 on a  named ubuntu with 2 processors, by hjy Thu Jun  9 23:53:16 2022
Using Petsc Release Version 3.17.1, Apr 28, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           4.247e+01     1.000   4.247e+01
Objects:              5.500e+01     1.000   5.500e+01
Flops:                2.270e+08     1.004   2.265e+08  4.531e+08
Flops/sec:            5.345e+06     1.004   5.334e+06  1.067e+07
Memory (bytes):       5.224e+05     1.001   5.221e+05  1.044e+06
MPI Msg Count:        1.322e+04     1.000   1.322e+04  2.645e+04
MPI Msg Len (bytes):  1.128e+05     1.000   8.529e+00  2.256e+05
MPI Reductions:       5.627e+05     1.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 4.2470e+01 100.0%  4.5307e+08 100.0%  2.645e+04 100.0%  8.529e+00      100.0%  5.627e+05 100.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

BuildTwoSided        106 1.0 5.5600e-02 1.5 0.00e+00 0.0 2.1e+02 1.2e+01 2.1e+02  0  0  1  1  0   0  0  1  1  0     0
BuildTwoSidedF       105 1.0 8.6352e-02 1.3 0.00e+00 0.0 6.2e+02 2.8e+01 2.1e+02  0  0  2  8  0   0  0  2  8  0     0
VecView                1 1.0 5.3367e-0415.0 0.00e+00 0.0 1.0e+00 2.0e+03 0.0e+00  0  0  0  1  0   0  0  0  1  0     0
VecMDot            12525 1.0 2.0346e+00 1.0 9.54e+07 1.0 0.0e+00 0.0e+00 2.5e+04  5 42  0  0  4   5 42  0  0  4    94
VecNorm            13014 1.0 1.7621e+00 1.0 6.53e+06 1.0 0.0e+00 0.0e+00 2.6e+04  4  3  0  0  5   4  3  0  0  5     7
VecScale           13014 1.0 1.7323e-02 1.0 3.27e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   376
VecCopy              589 1.0 9.3318e-04 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet               589 1.0 1.0053e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY              978 1.0 1.7697e-03 1.1 4.91e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0   554
VecMAXPY           13014 1.0 4.6065e-02 1.0 1.02e+08 1.0 0.0e+00 0.0e+00 0.0e+00  0 45  0  0  0   0 45  0  0  0  4414
VecAssemblyBegin     102 1.0 9.9142e-02 1.3 0.00e+00 0.0 6.1e+02 2.8e+01 4.1e+02  0  0  2  7  0   0  0  2  7  0     0
VecAssemblyEnd       102 1.0 3.2051e-02 3.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecPointwiseMult   13014 1.0 1.2440e-02 1.1 3.27e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   524
VecScatterBegin    12914 1.0 3.3595e-01 1.1 0.00e+00 0.0 2.6e+04 8.0e+00 2.0e+00  1  0 98 92  0   1  0 98 92  0     0
VecScatterEnd      12914 1.0 3.8720e-01 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
VecNormalize       13014 1.0 1.7976e+00 1.0 9.80e+06 1.0 0.0e+00 0.0e+00 2.6e+04  4  4  0  0  5   4  4  0  0  5    11
MatMult            12914 1.0 7.6602e-01 1.0 1.62e+07 1.0 2.6e+04 8.0e+00 2.0e+00  2  7 98 92  0   2  7 98 92  0    42
MatAssemblyBegin       3 1.0 1.5228e-03 1.1 0.00e+00 0.0 4.0e+00 1.8e+01 1.2e+01  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         3 1.0 2.4784e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 1.9e+01  0  0  0  0  0   0  0  0  0  0     0
SFSetGraph             1 1.0 2.4150e-06 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetUp                1 1.0 2.7232e-04 1.0 0.00e+00 0.0 4.0e+00 4.0e+00 2.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFPack             12914 1.0 8.1955e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFUnpack           12914 1.0 4.6444e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 1.7362e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve             100 1.0 4.2328e+01 1.0 2.27e+08 1.0 2.6e+04 8.0e+00 5.6e+05100100 98 92100 100100 98 92100    11
KSPGMRESOrthog     12525 1.0 3.4313e+01 1.0 1.91e+08 1.0 0.0e+00 0.0e+00 4.6e+05 81 84  0  0 81  81 84  0  0 81    11
PCSetUp                1 1.0 4.5000e-06 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
PCApply            13014 1.0 2.6766e-02 1.1 3.27e+06 1.0 0.0e+00 0.0e+00 7.0e+00  0  1  0  0  0   0  1  0  0  0   244
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector    40             40       147224     0.
              Matrix     3              3        38164     0.
           Index Set     2              2         1804     0.
   Star Forest Graph     3              3         3336     0.
       Krylov Solver     1              1        18872     0.
      Preconditioner     1              1          880     0.
    Distributed Mesh     1              1         5072     0.
     Discrete System     1              1          968     0.
           Weak Form     1              1          624     0.
              Viewer     2              1          848     0.
========================================================================================================================
Average time to get PetscTime(): 3.94e-08
Average time for MPI_Barrier(): 9.38348e-05
Average time for zero size MPI_Send(): 4.6505e-05
#PETSc Option Table entries:
-log_view
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-mpich=/home/hjy/Soft/petsc-3.16.6-extlibs/mpich-3.4.2.tar.gz --download-fblaslapack --with-debugging=yes --prefix=/home/hjy/Soft/petsc-3.17.1-opt --download-hypre=/home/hjy/Soft/petsc-3.16.6-extlibs/hypre-2.23.0.tar.gz --download-mumps=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-metis-c8d2dc1e751e.tar.gz --download-hdf5=/home/hjy/Soft/petsc-3.16.6-extlibs/hdf5-1.12.1.tar.bz2 COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native" --download-scalapack --with-fc=gfortran --with-fortranlib-autodetect=1
-----------------------------------------
Libraries compiled on 2022-05-23 03:40:19 on ubuntu 
Machine characteristics: Linux-5.4.0-110-generic-x86_64-with-Ubuntu-18.04-bionic
Using PETSc directory: /home/hjy/Soft/petsc-3.17.1-opt
Using PETSc arch: 
-----------------------------------------

Using C compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native   
Using Fortran compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native    
-----------------------------------------

Using include paths: -I/home/hjy/Soft/petsc-3.17.1-opt/include
-----------------------------------------

Using C linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc
Using Fortran linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90
Using libraries: -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -lpetsc -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -Wl,-rpath,/home/hjy/lib/hdf5-1.13.1/lib -L/home/hjy/lib/hdf5-1.13.1/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7 -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1 -L/home/hjy/Soft/petsc-3.17.1 -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lpthread -lscalapack -lflapack -lfblas -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


======> Essential BC at x=0: prescribed temperature.
======> Essential BC at x=0: prescribed temperature.
Vec Object: 4 MPI processes
  type: mpi
Process [0]
0.
0.000637669
0.00127531
0.00191291
0.00255042
0.00318784
0.00382513
0.00446227
0.00509924
0.005736
0.00637254
0.00700882
0.00764483
0.00828054
0.00891592
0.00955094
0.0101856
0.0108198
0.0114537
0.012087
0.0127199
0.0133523
0.0139842
0.0146155
0.0152462
0.0158764
0.0165059
0.0171347
0.0177629
0.0183904
0.0190171
0.0196431
0.0202683
0.0208928
0.0215164
0.0221391
0.022761
0.023382
0.024002
0.0246211
0.0252393
0.0258564
0.0264725
0.0270876
0.0277016
0.0283145
0.0289263
0.0295369
0.0301464
0.0307547
0.0313618
0.0319676
0.0325722
0.0331755
0.0337775
0.0343781
0.0349774
0.0355753
0.0361718
0.0367669
0.0373605
0.0379527
0.0385433
0.0391325
0.0397201
0.0403061
0.0408905
0.0414733
0.0420545
0.042634
0.0432118
0.043788
0.0443624
0.044935
0.0455059
0.046075
0.0466422
0.0472076
0.0477712
0.0483329
0.0488926
0.0494505
0.0500063
0.0505602
0.0511121
0.051662
0.0522099
0.0527557
0.0532994
0.053841
0.0543804
0.0549178
0.0554529
0.0559859
0.0565167
0.0570452
0.0575715
0.0580955
0.0586172
0.0591366
0.0596536
0.0601684
0.0606807
0.0611906
0.0616981
0.0622032
0.0627059
0.063206
0.0637037
0.0641988
0.0646914
0.0651815
0.065669
0.0661539
0.0666361
0.0671158
0.0675928
0.0680671
0.0685387
0.0690077
0.0694739
0.0699374
0.0703981
0.070856
0.0713111
0.0717635
Process [1]
0.0722129
0.0726596
0.0731033
0.0735442
0.0739822
0.0744172
0.0748494
0.0752785
0.0757047
0.0761279
0.0765481
0.0769653
0.0773794
0.0777905
0.0781985
0.0786034
0.0790052
0.0794039
0.0797995
0.0801919
0.0805812
0.0809672
0.0813501
0.0817298
0.0821062
0.0824794
0.0828493
0.083216
0.0835794
0.0839395
0.0842962
0.0846497
0.0849998
0.0853465
0.0856899
0.0860299
0.0863665
0.0866996
0.0870294
0.0873557
0.0876786
0.087998
0.0883139
0.0886264
0.0889354
0.0892408
0.0895427
0.0898411
0.0901359
0.0904272
0.0907149
0.0909991
0.0912796
0.0915565
0.0918299
0.0920996
0.0923656
0.092628
0.0928868
0.0931419
0.0933933
0.093641
0.093885
0.0941253
0.0943619
0.0945948
0.094824
0.0950494
0.095271
0.0954889
0.095703
0.0959134
0.0961199
0.0963227
0.0965216
0.0967168
0.0969081
0.0970956
0.0972793
0.0974591
0.0976351
0.0978072
0.0979755
0.0981399
0.0983004
0.098457
0.0986098
0.0987587
0.0989036
0.0990447
0.0991818
0.0993151
0.0994444
0.0995698
0.0996912
0.0998087
0.0999223
0.100032
0.100138
0.100239
0.100337
0.100431
0.100521
0.100607
0.100689
0.100767
0.10084
0.10091
0.100976
0.101038
0.101096
0.10115
0.101201
0.101247
0.101289
0.101327
0.101361
0.101391
0.101417
0.101439
0.101457
0.101471
0.101481
0.101487
0.101489
Process [2]
0.101487
0.101481
0.101471
0.101457
0.101439
0.101417
0.101391
0.101361
0.101327
0.101289
0.101247
0.101201
0.10115
0.101096
0.101038
0.100976
0.10091
0.10084
0.100767
0.100689
0.100607
0.100521
0.100431
0.100337
0.100239
0.100138
0.100032
0.0999223
0.0998087
0.0996912
0.0995698
0.0994444
0.0993151
0.0991818
0.0990447
0.0989036
0.0987587
0.0986098
0.098457
0.0983004
0.0981399
0.0979755
0.0978072
0.0976351
0.0974591
0.0972793
0.0970956
0.0969081
0.0967168
0.0965216
0.0963227
0.0961199
0.0959134
0.095703
0.0954889
0.095271
0.0950494
0.094824
0.0945948
0.094362
0.0941253
0.093885
0.093641
0.0933933
0.0931419
0.0928868
0.092628
0.0923656
0.0920996
0.0918299
0.0915565
0.0912796
0.0909991
0.0907149
0.0904272
0.090136
0.0898411
0.0895427
0.0892408
0.0889354
0.0886264
0.088314
0.087998
0.0876786
0.0873557
0.0870294
0.0866996
0.0863665
0.0860299
0.0856899
0.0853465
0.0849998
0.0846497
0.0842962
0.0839395
0.0835794
0.083216
0.0828493
0.0824794
0.0821062
0.0817298
0.0813501
0.0809672
0.0805812
0.0801919
0.0797995
0.0794039
0.0790052
0.0786034
0.0781985
0.0777905
0.0773794
0.0769653
0.0765481
0.0761279
0.0757047
0.0752785
0.0748494
0.0744172
0.0739822
0.0735442
0.0731033
0.0726596
0.0722129
0.0717635
Process [3]
0.0713111
0.070856
0.0703981
0.0699374
0.0694739
0.0690077
0.0685388
0.0680671
0.0675928
0.0671158
0.0666361
0.0661539
0.065669
0.0651815
0.0646914
0.0641988
0.0637037
0.063206
0.0627059
0.0622032
0.0616982
0.0611906
0.0606807
0.0601684
0.0596537
0.0591366
0.0586172
0.0580955
0.0575715
0.0570452
0.0565167
0.0559859
0.0554529
0.0549178
0.0543804
0.053841
0.0532994
0.0527557
0.0522099
0.051662
0.0511121
0.0505602
0.0500063
0.0494505
0.0488926
0.0483329
0.0477712
0.0472077
0.0466422
0.046075
0.0455059
0.044935
0.0443624
0.043788
0.0432119
0.042634
0.0420545
0.0414733
0.0408905
0.0403061
0.0397201
0.0391325
0.0385433
0.0379527
0.0373605
0.0367669
0.0361718
0.0355753
0.0349774
0.0343781
0.0337775
0.0331755
0.0325722
0.0319676
0.0313618
0.0307547
0.0301464
0.0295369
0.0289263
0.0283145
0.0277016
0.0270876
0.0264725
0.0258564
0.0252393
0.0246211
0.024002
0.023382
0.022761
0.0221391
0.0215164
0.0208928
0.0202683
0.0196431
0.0190171
0.0183904
0.0177629
0.0171347
0.0165059
0.0158764
0.0152462
0.0146155
0.0139842
0.0133523
0.0127199
0.012087
0.0114537
0.0108198
0.0101856
0.00955095
0.00891592
0.00828054
0.00764483
0.00700882
0.00637254
0.005736
0.00509924
0.00446227
0.00382513
0.00318784
0.00255042
0.00191291
0.00127531
0.000637669
0.
**************************************** ***********************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./ex1 on a  named ubuntu with 4 processors, by hjy Thu Jun  9 23:55:37 2022
Using Petsc Release Version 3.17.1, Apr 28, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           1.069e+02     1.000   1.069e+02
Objects:              5.500e+01     1.000   5.500e+01
Flops:                1.150e+08     1.008   1.144e+08  4.575e+08
Flops/sec:            1.077e+06     1.008   1.070e+06  4.281e+06
Memory (bytes):       4.721e+05     1.000   4.720e+05  1.888e+06
MPI Msg Count:        2.653e+04     1.933   2.013e+04  8.051e+04
MPI Msg Len (bytes):  2.217e+05     1.858   8.482e+00  6.829e+05
MPI Reductions:       5.691e+05     1.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 1.0686e+02 100.0%  4.5751e+08 100.0%  8.051e+04 100.0%  8.482e+00      100.0%  5.691e+05 100.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

BuildTwoSided        106 1.0 6.6950e-02 1.1 0.00e+00 0.0 6.4e+02 1.2e+01 2.1e+02  0  0  1  1  0   0  0  1  1  0     0
BuildTwoSidedF       105 1.0 1.2591e-01 1.0 0.00e+00 0.0 1.9e+03 2.7e+01 2.1e+02  0  0  2  7  0   0  0  2  7  0     0
VecView                1 1.0 8.8307e-0427.3 0.00e+00 0.0 3.0e+00 1.0e+03 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecMDot            12703 1.0 5.1601e+00 1.0 4.83e+07 1.0 0.0e+00 0.0e+00 2.5e+04  5 42  0  0  4   5 42  0  0  4    37
VecNorm            13202 1.0 4.5872e+00 1.0 3.33e+06 1.0 0.0e+00 0.0e+00 2.6e+04  4  3  0  0  5   4  3  0  0  5     3
VecScale           13202 1.0 2.2650e-02 1.1 1.66e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   292
VecCopy              599 1.0 9.6204e-04 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet               599 1.0 1.1338e-03 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY              998 1.0 1.8737e-03 1.1 2.51e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0   534
VecMAXPY           13202 1.0 5.3182e-02 1.0 5.17e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0 45  0  0  0   0 45  0  0  0  3862
VecAssemblyBegin     102 1.0 1.5392e-01 1.0 0.00e+00 0.0 1.9e+03 2.7e+01 4.1e+02  0  0  2  7  0   0  0  2  7  0     0
VecAssemblyEnd       102 1.0 4.0371e-03 5.6 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecPointwiseMult   13202 1.0 1.7006e-02 1.1 1.66e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   389
VecScatterBegin    13102 1.0 4.9366e-01 1.5 0.00e+00 0.0 7.9e+04 8.0e+00 2.0e+00  0  0 98 92  0   0  0 98 92  0     0
VecScatterEnd      13102 1.0 7.5122e-01 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
VecNormalize       13202 1.0 4.6320e+00 1.0 4.99e+06 1.0 0.0e+00 0.0e+00 2.6e+04  4  4  0  0  5   4  4  0  0  5     4
MatMult            13102 1.0 1.3092e+00 1.4 8.23e+06 1.0 7.9e+04 8.0e+00 2.0e+00  1  7 98 92  0   1  7 98 92  0    25
MatAssemblyBegin       3 1.0 3.7400e-03 1.1 0.00e+00 0.0 1.2e+01 1.8e+01 1.2e+01  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         3 1.0 4.8305e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 1.9e+01  0  0  0  0  0   0  0  0  0  0     0
SFSetGraph             1 1.0 6.3440e-06 3.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetUp                1 1.0 1.0516e-03 1.1 0.00e+00 0.0 1.2e+01 4.0e+00 2.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFPack             13102 1.0 1.7202e-02 1.9 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFUnpack           13102 1.0 5.7359e-03 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 4.8032e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve             100 1.0 1.0664e+02 1.0 1.15e+08 1.0 7.9e+04 8.0e+00 5.7e+05100100 98 92100 100100 98 92100     4
KSPGMRESOrthog     12703 1.0 8.6817e+01 1.0 9.67e+07 1.0 0.0e+00 0.0e+00 4.6e+05 81 84  0  0 81  81 84  0  0 81     4
PCSetUp                1 1.0 7.1150e-06 2.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
PCApply            13202 1.0 3.4849e-02 1.1 1.66e+06 1.0 0.0e+00 0.0e+00 7.0e+00  0  1  0  0  0   0  1  0  0  0   190
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector    40             40       109224     0.
              Matrix     3              3        24164     0.
           Index Set     2              2         1804     0.
   Star Forest Graph     3              3         3336     0.
       Krylov Solver     1              1        18872     0.
      Preconditioner     1              1          880     0.
    Distributed Mesh     1              1         5072     0.
     Discrete System     1              1          968     0.
           Weak Form     1              1          624     0.
              Viewer     2              1          848     0.
========================================================================================================================
Average time to get PetscTime(): 4e-08
Average time for MPI_Barrier(): 0.000123799
Average time for zero size MPI_Send(): 3.85637e-05
#PETSc Option Table entries:
-log_view
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-mpich=/home/hjy/Soft/petsc-3.16.6-extlibs/mpich-3.4.2.tar.gz --download-fblaslapack --with-debugging=yes --prefix=/home/hjy/Soft/petsc-3.17.1-opt --download-hypre=/home/hjy/Soft/petsc-3.16.6-extlibs/hypre-2.23.0.tar.gz --download-mumps=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-metis-c8d2dc1e751e.tar.gz --download-hdf5=/home/hjy/Soft/petsc-3.16.6-extlibs/hdf5-1.12.1.tar.bz2 COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native" --download-scalapack --with-fc=gfortran --with-fortranlib-autodetect=1
-----------------------------------------
Libraries compiled on 2022-05-23 03:40:19 on ubuntu 
Machine characteristics: Linux-5.4.0-110-generic-x86_64-with-Ubuntu-18.04-bionic
Using PETSc directory: /home/hjy/Soft/petsc-3.17.1-opt
Using PETSc arch: 
-----------------------------------------

Using C compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native   
Using Fortran compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native    
-----------------------------------------

Using include paths: -I/home/hjy/Soft/petsc-3.17.1-opt/include
-----------------------------------------

Using C linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc
Using Fortran linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90
Using libraries: -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -lpetsc -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -Wl,-rpath,/home/hjy/lib/hdf5-1.13.1/lib -L/home/hjy/lib/hdf5-1.13.1/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7 -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1 -L/home/hjy/Soft/petsc-3.17.1 -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lpthread -lscalapack -lflapack -lfblas -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


======> Essential BC at x=0: prescribed temperature.
======> Essential BC at x=0: prescribed temperature.
Vec Object: 8 MPI processes
  type: mpi
Process [0]
0.
0.000637669
0.00127531
0.00191291
0.00255042
0.00318784
0.00382513
0.00446227
0.00509924
0.005736
0.00637254
0.00700882
0.00764483
0.00828054
0.00891592
0.00955094
0.0101856
0.0108198
0.0114537
0.012087
0.0127199
0.0133523
0.0139842
0.0146155
0.0152462
0.0158764
0.0165059
0.0171347
0.0177629
0.0183904
0.0190171
0.0196431
0.0202683
0.0208928
0.0215164
0.0221391
0.022761
0.023382
0.024002
0.0246211
0.0252393
0.0258564
0.0264725
0.0270876
0.0277016
0.0283145
0.0289263
0.0295369
0.0301464
0.0307547
0.0313618
0.0319676
0.0325722
0.0331755
0.0337775
0.0343781
0.0349774
0.0355753
0.0361718
0.0367669
0.0373605
0.0379527
0.0385433
Process [1]
0.0391325
0.0397201
0.0403061
0.0408905
0.0414733
0.0420545
0.042634
0.0432118
0.043788
0.0443624
0.044935
0.0455059
0.046075
0.0466422
0.0472076
0.0477712
0.0483329
0.0488926
0.0494505
0.0500063
0.0505602
0.0511121
0.051662
0.0522099
0.0527557
0.0532994
0.053841
0.0543804
0.0549178
0.0554529
0.0559859
0.0565167
0.0570452
0.0575715
0.0580955
0.0586172
0.0591366
0.0596536
0.0601684
0.0606807
0.0611906
0.0616981
0.0622032
0.0627059
0.063206
0.0637037
0.0641988
0.0646914
0.0651815
0.065669
0.0661539
0.0666361
0.0671158
0.0675928
0.0680671
0.0685387
0.0690077
0.0694739
0.0699374
0.0703981
0.070856
0.0713111
0.0717635
Process [2]
0.0722129
0.0726596
0.0731033
0.0735442
0.0739822
0.0744172
0.0748494
0.0752785
0.0757047
0.0761279
0.0765481
0.0769653
0.0773794
0.0777905
0.0781985
0.0786034
0.0790052
0.0794039
0.0797995
0.0801919
0.0805812
0.0809672
0.0813501
0.0817298
0.0821062
0.0824794
0.0828493
0.083216
0.0835794
0.0839395
0.0842962
0.0846497
0.0849998
0.0853465
0.0856899
0.0860299
0.0863665
0.0866996
0.0870294
0.0873557
0.0876786
0.087998
0.0883139
0.0886264
0.0889354
0.0892408
0.0895427
0.0898411
0.0901359
0.0904272
0.0907149
0.0909991
0.0912796
0.0915565
0.0918299
0.0920996
0.0923656
0.092628
0.0928868
0.0931419
0.0933933
0.093641
0.093885
Process [3]
0.0941253
0.0943619
0.0945948
0.094824
0.0950494
0.095271
0.0954889
0.095703
0.0959134
0.0961199
0.0963227
0.0965216
0.0967168
0.0969081
0.0970956
0.0972793
0.0974591
0.0976351
0.0978072
0.0979755
0.0981399
0.0983004
0.098457
0.0986098
0.0987587
0.0989036
0.0990447
0.0991818
0.0993151
0.0994444
0.0995698
0.0996912
0.0998087
0.0999223
0.100032
0.100138
0.100239
0.100337
0.100431
0.100521
0.100607
0.100689
0.100767
0.10084
0.10091
0.100976
0.101038
0.101096
0.10115
0.101201
0.101247
0.101289
0.101327
0.101361
0.101391
0.101417
0.101439
0.101457
0.101471
0.101481
0.101487
0.101489
0.101487
Process [4]
0.101481
0.101471
0.101457
0.101439
0.101417
0.101391
0.101361
0.101327
0.101289
0.101247
0.101201
0.10115
0.101096
0.101038
0.100976
0.10091
0.10084
0.100767
0.100689
0.100607
0.100521
0.100431
0.100337
0.100239
0.100138
0.100032
0.0999223
0.0998087
0.0996912
0.0995698
0.0994444
0.0993151
0.0991818
0.0990447
0.0989036
0.0987587
0.0986098
0.098457
0.0983004
0.0981399
0.0979755
0.0978072
0.0976351
0.0974591
0.0972793
0.0970956
0.0969081
0.0967168
0.0965216
0.0963227
0.0961199
0.0959134
0.095703
0.0954889
0.095271
0.0950494
0.094824
0.0945948
0.094362
0.0941253
0.093885
0.093641
0.0933933
Process [5]
0.0931419
0.0928868
0.092628
0.0923656
0.0920996
0.0918299
0.0915565
0.0912796
0.0909991
0.0907149
0.0904272
0.090136
0.0898411
0.0895427
0.0892408
0.0889354
0.0886264
0.088314
0.087998
0.0876786
0.0873557
0.0870294
0.0866996
0.0863665
0.0860299
0.0856899
0.0853465
0.0849998
0.0846497
0.0842962
0.0839395
0.0835794
0.083216
0.0828493
0.0824794
0.0821062
0.0817298
0.0813501
0.0809672
0.0805812
0.0801919
0.0797995
0.0794039
0.0790052
0.0786034
0.0781985
0.0777905
0.0773794
0.0769653
0.0765481
0.0761279
0.0757047
0.0752785
0.0748494
0.0744172
0.0739822
0.0735442
0.0731033
0.0726596
0.0722129
0.0717635
0.0713111
Process [6]
0.070856
0.0703981
0.0699374
0.0694739
0.0690077
0.0685388
0.0680671
0.0675928
0.0671158
0.0666361
0.0661539
0.065669
0.0651815
0.0646914
0.0641988
0.0637037
0.063206
0.0627059
0.0622032
0.0616982
0.0611906
0.0606807
0.0601684
0.0596537
0.0591366
0.0586172
0.0580955
0.0575715
0.0570452
0.0565167
0.0559859
0.0554529
0.0549178
0.0543804
0.053841
0.0532994
0.0527557
0.0522099
0.051662
0.0511121
0.0505602
0.0500063
0.0494505
0.0488926
0.0483329
0.0477712
0.0472077
0.0466422
0.046075
0.0455059
0.044935
0.0443624
0.043788
0.0432119
0.042634
0.0420545
0.0414733
0.0408905
0.0403061
0.0397201
0.0391325
0.0385433
Process [7]
0.0379527
0.0373605
0.0367669
0.0361718
0.0355753
0.0349774
0.0343781
0.0337775
0.0331755
0.0325722
0.0319676
0.0313618
0.0307547
0.0301464
0.0295369
0.0289263
0.0283145
0.0277016
0.0270876
0.0264725
0.0258564
0.0252393
0.0246211
0.024002
0.023382
0.022761
0.0221391
0.0215164
0.0208928
0.0202683
0.0196431
0.0190171
0.0183904
0.0177629
0.0171347
0.0165059
0.0158764
0.0152462
0.0146155
0.0139842
0.0133523
0.0127199
0.012087
0.0114537
0.0108198
0.0101856
0.00955095
0.00891592
0.00828054
0.00764483
0.00700882
0.00637254
0.005736
0.00509924
0.00446227
0.00382513
0.00318784
0.00255042
0.00191291
0.00127531
0.000637669
0.
**************************************** ***********************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./ex1 on a  named ubuntu with 8 processors, by hjy Fri Jun 10 00:04:31 2022
Using Petsc Release Version 3.17.1, Apr 28, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           1.189e+02     1.000   1.189e+02
Objects:              5.500e+01     1.000   5.500e+01
Flops:                5.568e+07     1.017   5.534e+07  4.427e+08
Flops/sec:            4.682e+05     1.017   4.653e+05  3.722e+06
Memory (bytes):       4.478e+05     1.001   4.477e+05  3.582e+06
MPI Msg Count:        2.571e+04     1.845   2.276e+04  1.821e+05
MPI Msg Len (bytes):  2.163e+05     1.772   8.475e+00  1.543e+06
MPI Reductions:       5.515e+05     1.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 1.1894e+02 100.0%  4.4274e+08 100.0%  1.821e+05 100.0%  8.475e+00      100.0%  5.515e+05 100.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

BuildTwoSided        106 1.0 1.0296e-01 1.2 0.00e+00 0.0 1.5e+03 1.2e+01 2.1e+02  0  0  1  1  0   0  0  1  1  0     0
BuildTwoSidedF       105 1.0 2.1993e-01 1.1 0.00e+00 0.0 4.6e+03 2.6e+01 2.1e+02  0  0  3  8  0   0  0  3  8  0     0
VecView                1 1.0 1.4277e-0325.7 0.00e+00 0.0 7.0e+00 5.0e+02 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecMDot            12297 1.0 7.2135e+00 1.0 2.33e+07 1.0 0.0e+00 0.0e+00 2.5e+04  6 42  0  0  4   6 42  0  0  4    26
VecNorm            12779 1.0 5.5021e+00 1.0 1.61e+06 1.0 0.0e+00 0.0e+00 2.6e+04  5  3  0  0  5   5  3  0  0  5     2
VecScale           12779 1.0 2.1395e-02 1.1 8.05e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   299
VecCopy              582 1.0 9.5103e-04 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet               582 1.0 1.0914e-03 1.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY              964 1.0 1.8137e-03 1.2 1.21e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0   533
VecMAXPY           12779 1.0 4.8956e-02 1.1 2.50e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0 45  0  0  0   0 45  0  0  0  4068
VecAssemblyBegin     102 1.0 2.5662e-01 1.1 0.00e+00 0.0 4.5e+03 2.6e+01 4.1e+02  0  0  2  8  0   0  0  2  8  0     0
VecAssemblyEnd       102 1.0 1.8295e-0228.7 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecPointwiseMult   12779 1.0 1.3818e-02 1.1 8.05e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   463
VecScatterBegin    12679 1.0 4.8237e-01 1.5 0.00e+00 0.0 1.8e+05 8.0e+00 2.0e+00  0  0 97 92  0   0  0 97 92  0     0
VecScatterEnd      12679 1.0 1.2883e+00 1.6 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
VecNormalize       12779 1.0 5.5445e+00 1.0 2.42e+06 1.0 0.0e+00 0.0e+00 2.6e+04  5  4  0  0  5   5  4  0  0  5     3
MatMult            12679 1.0 1.7734e+00 1.5 3.99e+06 1.0 1.8e+05 8.0e+00 2.0e+00  1  7 97 92  0   1  7 97 92  0    18
MatAssemblyBegin       3 1.0 4.3296e-03 1.2 0.00e+00 0.0 2.8e+01 1.8e+01 1.2e+01  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         3 1.0 6.1680e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 1.9e+01  0  0  0  0  0   0  0  0  0  0     0
SFSetGraph             1 1.0 5.9160e-06 3.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetUp                1 1.0 1.0047e-03 1.2 0.00e+00 0.0 2.8e+01 4.0e+00 2.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFPack             12679 1.0 1.5166e-02 1.7 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFUnpack           12679 1.0 6.1028e-03 1.3 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 5.1282e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve             100 1.0 1.1862e+02 1.0 5.57e+07 1.0 1.8e+05 8.0e+00 5.5e+05100100 97 92100 100100 97 92100     4
KSPGMRESOrthog     12297 1.0 9.5511e+01 1.0 4.68e+07 1.0 0.0e+00 0.0e+00 4.5e+05 80 84  0  0 81  80 84  0  0 81     4
PCSetUp                1 1.0 4.2030e-06 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
PCApply            12779 1.0 3.1659e-02 1.1 8.05e+05 1.0 0.0e+00 0.0e+00 7.0e+00  0  1  0  0  0   0  1  0  0  0   202
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector    40             40        90072     0.
              Matrix     3              3        17108     0.
           Index Set     2              2         1804     0.
   Star Forest Graph     3              3         3336     0.
       Krylov Solver     1              1        18872     0.
      Preconditioner     1              1          880     0.
    Distributed Mesh     1              1         5072     0.
     Discrete System     1              1          968     0.
           Weak Form     1              1          624     0.
              Viewer     2              1          848     0.
========================================================================================================================
Average time to get PetscTime(): 3.49e-08
Average time for MPI_Barrier(): 0.000574048
Average time for zero size MPI_Send(): 6.42102e-05
#PETSc Option Table entries:
-log_view
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-mpich=/home/hjy/Soft/petsc-3.16.6-extlibs/mpich-3.4.2.tar.gz --download-fblaslapack --with-debugging=yes --prefix=/home/hjy/Soft/petsc-3.17.1-opt --download-hypre=/home/hjy/Soft/petsc-3.16.6-extlibs/hypre-2.23.0.tar.gz --download-mumps=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-metis-c8d2dc1e751e.tar.gz --download-hdf5=/home/hjy/Soft/petsc-3.16.6-extlibs/hdf5-1.12.1.tar.bz2 COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native" --download-scalapack --with-fc=gfortran --with-fortranlib-autodetect=1
-----------------------------------------
Libraries compiled on 2022-05-23 03:40:19 on ubuntu 
Machine characteristics: Linux-5.4.0-110-generic-x86_64-with-Ubuntu-18.04-bionic
Using PETSc directory: /home/hjy/Soft/petsc-3.17.1-opt
Using PETSc arch: 
-----------------------------------------

Using C compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native   
Using Fortran compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native    
-----------------------------------------

Using include paths: -I/home/hjy/Soft/petsc-3.17.1-opt/include
-----------------------------------------

Using C linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc
Using Fortran linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90
Using libraries: -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -lpetsc -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -Wl,-rpath,/home/hjy/lib/hdf5-1.13.1/lib -L/home/hjy/lib/hdf5-1.13.1/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7 -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1 -L/home/hjy/Soft/petsc-3.17.1 -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lpthread -lscalapack -lflapack -lfblas -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


======> Essential BC at x=0: prescribed temperature.
======> Essential BC at x=0: prescribed temperature.
Vec Object: 16 MPI processes
  type: mpi
Process [0]
0.
0.000637669
0.00127531
0.00191291
0.00255042
0.00318784
0.00382513
0.00446227
0.00509924
0.005736
0.00637254
0.00700882
0.00764483
0.00828054
0.00891592
0.00955094
0.0101856
0.0108198
0.0114537
0.012087
0.0127199
0.0133523
0.0139842
0.0146155
0.0152462
0.0158764
0.0165059
0.0171347
0.0177629
0.0183904
0.0190171
0.0196431
Process [1]
0.0202683
0.0208928
0.0215164
0.0221391
0.022761
0.023382
0.024002
0.0246211
0.0252393
0.0258564
0.0264725
0.0270876
0.0277016
0.0283145
0.0289263
0.0295369
0.0301464
0.0307547
0.0313618
0.0319676
0.0325722
0.0331755
0.0337775
0.0343781
0.0349774
0.0355753
0.0361718
0.0367669
0.0373605
0.0379527
0.0385433
0.0391325
Process [2]
0.0397201
0.0403061
0.0408905
0.0414733
0.0420545
0.042634
0.0432118
0.043788
0.0443624
0.044935
0.0455059
0.046075
0.0466422
0.0472076
0.0477712
0.0483329
0.0488926
0.0494505
0.0500063
0.0505602
0.0511121
0.051662
0.0522099
0.0527557
0.0532994
0.053841
0.0543804
0.0549178
0.0554529
0.0559859
0.0565167
0.0570452
Process [3]
0.0575715
0.0580955
0.0586172
0.0591366
0.0596536
0.0601684
0.0606807
0.0611906
0.0616981
0.0622032
0.0627059
0.063206
0.0637037
0.0641988
0.0646914
0.0651815
0.065669
0.0661539
0.0666361
0.0671158
0.0675928
0.0680671
0.0685387
0.0690077
0.0694739
0.0699374
0.0703981
0.070856
0.0713111
0.0717635
0.0722129
0.0726596
Process [4]
0.0731033
0.0735442
0.0739822
0.0744172
0.0748494
0.0752785
0.0757047
0.0761279
0.0765481
0.0769653
0.0773794
0.0777905
0.0781985
0.0786034
0.0790052
0.0794039
0.0797995
0.0801919
0.0805812
0.0809672
0.0813501
0.0817298
0.0821062
0.0824794
0.0828493
0.083216
0.0835794
0.0839395
0.0842962
0.0846497
0.0849998
0.0853465
Process [5]
0.0856899
0.0860299
0.0863665
0.0866996
0.0870294
0.0873557
0.0876786
0.087998
0.0883139
0.0886264
0.0889354
0.0892408
0.0895427
0.0898411
0.0901359
0.0904272
0.0907149
0.0909991
0.0912796
0.0915565
0.0918299
0.0920996
0.0923656
0.092628
0.0928868
0.0931419
0.0933933
0.093641
0.093885
0.0941253
0.0943619
Process [6]
0.0945948
0.094824
0.0950494
0.095271
0.0954889
0.095703
0.0959134
0.0961199
0.0963227
0.0965216
0.0967168
0.0969081
0.0970956
0.0972793
0.0974591
0.0976351
0.0978072
0.0979755
0.0981399
0.0983004
0.098457
0.0986098
0.0987587
0.0989036
0.0990447
0.0991818
0.0993151
0.0994444
0.0995698
0.0996912
0.0998087
Process [7]
0.0999223
0.100032
0.100138
0.100239
0.100337
0.100431
0.100521
0.100607
0.100689
0.100767
0.10084
0.10091
0.100976
0.101038
0.101096
0.10115
0.101201
0.101247
0.101289
0.101327
0.101361
0.101391
0.101417
0.101439
0.101457
0.101471
0.101481
0.101487
0.101489
0.101487
0.101481
Process [8]
0.101471
0.101457
0.101439
0.101417
0.101391
0.101361
0.101327
0.101289
0.101247
0.101201
0.10115
0.101096
0.101038
0.100976
0.10091
0.10084
0.100767
0.100689
0.100607
0.100521
0.100431
0.100337
0.100239
0.100138
0.100032
0.0999223
0.0998087
0.0996912
0.0995698
0.0994444
0.0993151
Process [9]
0.0991818
0.0990447
0.0989036
0.0987587
0.0986098
0.098457
0.0983004
0.0981399
0.0979755
0.0978072
0.0976351
0.0974591
0.0972793
0.0970956
0.0969081
0.0967168
0.0965216
0.0963227
0.0961199
0.0959134
0.095703
0.0954889
0.095271
0.0950494
0.094824
0.0945948
0.094362
0.0941253
0.093885
0.093641
0.0933933
Process [10]
0.0931419
0.0928868
0.092628
0.0923656
0.0920996
0.0918299
0.0915565
0.0912796
0.0909991
0.0907149
0.0904272
0.090136
0.0898411
0.0895427
0.0892408
0.0889354
0.0886264
0.088314
0.087998
0.0876786
0.0873557
0.0870294
0.0866996
0.0863665
0.0860299
0.0856899
0.0853465
0.0849998
0.0846497
0.0842962
0.0839395
Process [11]
0.0835794
0.083216
0.0828493
0.0824794
0.0821062
0.0817298
0.0813501
0.0809672
0.0805812
0.0801919
0.0797995
0.0794039
0.0790052
0.0786034
0.0781985
0.0777905
0.0773794
0.0769653
0.0765481
0.0761279
0.0757047
0.0752785
0.0748494
0.0744172
0.0739822
0.0735442
0.0731033
0.0726596
0.0722129
0.0717635
0.0713111
Process [12]
0.070856
0.0703981
0.0699374
0.0694739
0.0690077
0.0685388
0.0680671
0.0675928
0.0671158
0.0666361
0.0661539
0.065669
0.0651815
0.0646914
0.0641988
0.0637037
0.063206
0.0627059
0.0622032
0.0616982
0.0611906
0.0606807
0.0601684
0.0596537
0.0591366
0.0586172
0.0580955
0.0575715
0.0570452
0.0565167
0.0559859
Process [13]
0.0554529
0.0549178
0.0543804
0.053841
0.0532994
0.0527557
0.0522099
0.051662
0.0511121
0.0505602
0.0500063
0.0494505
0.0488926
0.0483329
0.0477712
0.0472077
0.0466422
0.046075
0.0455059
0.044935
0.0443624
0.043788
0.0432119
0.042634
0.0420545
0.0414733
0.0408905
0.0403061
0.0397201
0.0391325
0.0385433
Process [14]
0.0379527
0.0373605
0.0367669
0.0361718
0.0355753
0.0349774
0.0343781
0.0337775
0.0331755
0.0325722
0.0319676
0.0313618
0.0307547
0.0301464
0.0295369
0.0289263
0.0283145
0.0277016
0.0270876
0.0264725
0.0258564
0.0252393
0.0246211
0.024002
0.023382
0.022761
0.0221391
0.0215164
0.0208928
0.0202683
0.0196431
Process [15]
0.0190171
0.0183904
0.0177629
0.0171347
0.0165059
0.0158764
0.0152462
0.0146155
0.0139842
0.0133523
0.0127199
0.012087
0.0114537
0.0108198
0.0101856
0.00955095
0.00891592
0.00828054
0.00764483
0.00700882
0.00637254
0.005736
0.00509924
0.00446227
0.00382513
0.00318784
0.00255042
0.00191291
0.00127531
0.000637669
0.
**************************************** ***********************************************************************************************************************
***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
****************************************************************************************************************************************************************

------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


./ex1 on a  named ubuntu with 16 processors, by hjy Fri Jun 10 00:13:16 2022
Using Petsc Release Version 3.17.1, Apr 28, 2022 

                         Max       Max/Min     Avg       Total
Time (sec):           3.076e+02     1.000   3.076e+02
Objects:              5.500e+01     1.000   5.500e+01
Flops:                2.860e+07     1.033   2.798e+07  4.477e+08
Flops/sec:            9.298e+04     1.033   9.096e+04  1.455e+06
Memory (bytes):       4.422e+05     1.000   4.421e+05  7.074e+06
MPI Msg Count:        2.615e+04     1.700   2.480e+04  3.969e+05
MPI Msg Len (bytes):  2.203e+05     1.642   8.450e+00  3.353e+06
MPI Reductions:       5.597e+05     1.000

Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
                            e.g., VecAXPY() for real vectors of length N --> 2N flops
                            and VecAXPY() for complex vectors of length N --> 8N flops

Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
 0:      Main Stage: 3.0763e+02 100.0%  4.4770e+08 100.0%  3.969e+05 100.0%  8.450e+00      100.0%  5.596e+05 100.0%

------------------------------------------------------------------------------------------------------------------------
See the 'Profiling' chapter of the users' manual for details on interpreting output.
Phase summary info:
   Count: number of times phase was executed
   Time and Flop: Max - maximum over all processors
                  Ratio - ratio of maximum to minimum over all processors
   Mess: number of messages sent
   AvgLen: average message length (bytes)
   Reduct: number of global reductions
   Global: entire computation
   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
      %T - percent time in this phase         %F - percent flop in this phase
      %M - percent messages in this phase     %L - percent message lengths in this phase
      %R - percent reductions in this phase
   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
------------------------------------------------------------------------------------------------------------------------


      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total
                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s
------------------------------------------------------------------------------------------------------------------------

--- Event Stage 0: Main Stage

BuildTwoSided        106 1.0 3.3422e-01 1.3 0.00e+00 0.0 3.5e+03 1.2e+01 2.1e+02  0  0  1  1  0   0  0  1  1  0     0
BuildTwoSidedF       105 1.0 6.1346e-01 1.2 0.00e+00 0.0 1.0e+04 2.5e+01 2.1e+02  0  0  3  8  0   0  0  3  8  0     0
VecView                1 1.0 3.6941e-03133.8 0.00e+00 0.0 1.5e+01 2.5e+02 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecMDot            12486 1.0 1.7064e+01 1.0 1.19e+07 1.0 0.0e+00 0.0e+00 2.5e+04  5 42  0  0  4   5 42  0  0  4    11
VecNorm            12976 1.0 1.4578e+01 1.0 8.30e+05 1.0 0.0e+00 0.0e+00 2.6e+04  5  3  0  0  5   5  3  0  0  5     1
VecScale           12976 1.0 3.1954e-02 1.1 4.15e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   203
VecCopy              590 1.0 1.0087e-03 1.5 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecSet               590 1.0 1.7021e-03 1.6 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecAXPY              980 1.0 3.0969e-03 1.6 6.27e+04 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0   317
VecMAXPY           12976 1.0 7.8816e-02 1.2 1.29e+07 1.0 0.0e+00 0.0e+00 0.0e+00  0 45  0  0  0   0 45  0  0  0  2563
VecAssemblyBegin     102 1.0 7.1403e-01 1.2 0.00e+00 0.0 1.0e+04 2.5e+01 4.1e+02  0  0  3  8  0   0  0  3  8  0     0
VecAssemblyEnd       102 1.0 1.9670e-01 9.2 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
VecPointwiseMult   12976 1.0 1.8357e-02 1.2 4.15e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0   354
VecScatterBegin    12876 1.0 6.5517e-01 1.4 0.00e+00 0.0 3.9e+05 8.0e+00 2.0e+00  0  0 97 92  0   0  0 97 92  0     0
VecScatterEnd      12876 1.0 3.0169e+00 1.5 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
VecNormalize       12976 1.0 1.4644e+01 1.0 1.25e+06 1.0 0.0e+00 0.0e+00 2.6e+04  5  4  0  0  5   5  4  0  0  5     1
MatMult            12876 1.0 3.7559e+00 1.5 2.06e+06 1.0 3.9e+05 8.0e+00 2.0e+00  1  7 97 92  0   1  7 97 92  0     9
MatAssemblyBegin       3 1.0 1.2954e-02 1.2 0.00e+00 0.0 6.0e+01 1.8e+01 1.2e+01  0  0  0  0  0   0  0  0  0  0     0
MatAssemblyEnd         3 1.0 1.3572e-02 1.1 0.00e+00 0.0 0.0e+00 0.0e+00 1.9e+01  0  0  0  0  0   0  0  0  0  0     0
SFSetGraph             1 1.0 1.2891e-05 9.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFSetUp                1 1.0 8.9900e-03 2.0 0.00e+00 0.0 6.0e+01 4.0e+00 2.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFPack             12876 1.0 2.3635e-02 2.1 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
SFUnpack           12876 1.0 7.5391e-03 1.4 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSetUp               1 1.0 2.1326e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
KSPSolve             100 1.0 3.0673e+02 1.0 2.86e+07 1.0 3.9e+05 8.0e+00 5.6e+05100100 97 92100 100100 97 92100     1
KSPGMRESOrthog     12486 1.0 2.4497e+02 1.0 2.40e+07 1.0 0.0e+00 0.0e+00 4.5e+05 79 84  0  0 81  79 84  0  0 81     2
PCSetUp                1 1.0 9.5510e-06 2.8 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
PCApply            12976 1.0 4.7544e-02 1.1 4.15e+05 1.0 0.0e+00 0.0e+00 7.0e+00  0  1  0  0  0   0  1  0  0  0   137
------------------------------------------------------------------------------------------------------------------------

Memory usage is given in bytes:

Object Type          Creations   Destructions     Memory  Descendants' Mem.
Reports information only for process 0.

--- Event Stage 0: Main Stage

              Vector    40             40        80648     0.
              Matrix     3              3        13636     0.
           Index Set     2              2         1804     0.
   Star Forest Graph     3              3         3336     0.
       Krylov Solver     1              1        18872     0.
      Preconditioner     1              1          880     0.
    Distributed Mesh     1              1         5072     0.
     Discrete System     1              1          968     0.
           Weak Form     1              1          624     0.
              Viewer     2              1          848     0.
========================================================================================================================
Average time to get PetscTime(): 4.47e-08
Average time for MPI_Barrier(): 0.000428218
Average time for zero size MPI_Send(): 0.000164011
#PETSc Option Table entries:
-log_view
#End of PETSc Option Table entries
Compiled without FORTRAN kernels
Compiled with full precision matrices (default)
sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
Configure options: --download-mpich=/home/hjy/Soft/petsc-3.16.6-extlibs/mpich-3.4.2.tar.gz --download-fblaslapack --with-debugging=yes --prefix=/home/hjy/Soft/petsc-3.17.1-opt --download-hypre=/home/hjy/Soft/petsc-3.16.6-extlibs/hypre-2.23.0.tar.gz --download-mumps=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-mumps-6d1470374d32.tar.gz --download-metis=/home/hjy/Soft/petsc-3.16.6-extlibs/petsc-pkg-metis-c8d2dc1e751e.tar.gz --download-hdf5=/home/hjy/Soft/petsc-3.16.6-extlibs/hdf5-1.12.1.tar.bz2 COPTFLAGS="-O3 -march=native -mtune=native" CXXOPTFLAGS="-O3 -march=native -mtune=native" FOPTFLAGS="-O3 -march=native -mtune=native" --download-scalapack --with-fc=gfortran --with-fortranlib-autodetect=1
-----------------------------------------
Libraries compiled on 2022-05-23 03:40:19 on ubuntu 
Machine characteristics: Linux-5.4.0-110-generic-x86_64-with-Ubuntu-18.04-bionic
Using PETSc directory: /home/hjy/Soft/petsc-3.17.1-opt
Using PETSc arch: 
-----------------------------------------

Using C compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O3 -march=native -mtune=native   
Using Fortran compiler: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-unused-dummy-argument -O3 -march=native -mtune=native    
-----------------------------------------

Using include paths: -I/home/hjy/Soft/petsc-3.17.1-opt/include
-----------------------------------------

Using C linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpicc
Using Fortran linker: /home/hjy/Soft/petsc-3.17.1-opt/bin/mpif90
Using libraries: -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -lpetsc -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1-opt/lib -L/home/hjy/Soft/petsc-3.17.1-opt/lib -Wl,-rpath,/home/hjy/lib/hdf5-1.13.1/lib -L/home/hjy/lib/hdf5-1.13.1/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7 -Wl,-rpath,/home/hjy/Soft/petsc-3.17.1 -L/home/hjy/Soft/petsc-3.17.1 -lHYPRE -lcmumps -ldmumps -lsmumps -lzmumps -lmumps_common -lpord -lpthread -lscalapack -lflapack -lfblas -lpthread -lhdf5_hl -lhdf5 -lmetis -lm -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
-----------------------------------------



      ##########################################################
      #                                                        #
      #                       WARNING!!!                       #
      #                                                        #
      #   This code was compiled with a debugging option.      #
      #   To get timing results run ./configure                #
      #   using --with-debugging=no, the performance will      #
      #   be generally two or three times faster.              #
      #                                                        #
      ##########################################################


